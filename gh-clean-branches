#!/bin/zsh

# safely delete local branches that have no remotes and no hanging changes
# will not delete branches with not commited changes
# run inside a git repo folder

red=$'\e[1;31m'
green=$'\e[1;32m'
yellow=$'\e[1;33m'
blue=$'\e[1;34m'
mag=$'\e[1;35m'
cyn=$'\e[1;36m'
end=$'\e[0m'

printf "%s\n" "${green}Sync branches${end}"
git fetch -p >/dev/null 2>&1 # hide response

printf "%s\n" "${green}Checking out main${end}"
git checkout main

printf "%s\n" "${green}Pulling main${end}"
git pull
if [[ $? -eq 1 ]]
  then
    printf "%s\n" "${red}Failed pull, Check for uncomited changes.${end}"
    exit 1
fi

local_branches_str=`git branch`
remote_branches_str=`git branch -r`
remote_branches_str=${remote_branches_str//origin\// } # trim the "origin/" from branch names

printf "%s\n%s\n" "${blue}Local branches:${end}" "${local_branches_str}"
printf "%s\n%s\n" "${blue}Remote branches:${end}" "${remote_branches_str}"

missing_upstream_branches_str=`node -e "
const args = process.argv.slice(1);
const local_branches_str = args[0]
const remote_branches_str = args[1]

local_branches = local_branches_str.trim().split('\n').filter(b => !b.includes(' main')).map(b => b.trim())
remote_branches = remote_branches_str.trim().split('\n').filter(b => !b.includes(' main')).map(b => b.trim())
missing_upstream_branches = local_branches.filter(b => !remote_branches.includes(b))

console.log(missing_upstream_branches.join(','))
" $local_branches_str $remote_branches_str`

missing_upstream_branches=("${(@s/,/)missing_upstream_branches_str}") # @ modifier

printf "%s\n" "${blue}Local branches with missing upstream:${end}"
for branch in "${missing_upstream_branches[@]}"; do
    printf "%s\n" "   ${branch}"
done

for branch in "${missing_upstream_branches[@]}"; do
    printf "%s\n" "${green}Deleting branch:${end}     ${branch}"
    git branch -d ${branch}
    if [[ $? -eq 1 ]]; then
      printf "%s\n" "‚ùå  ${red}Could not delete${end} ${branch}"
      printf "%s\n" "${tellow}Try manually:${end} git branch -D ${branch}"
    fi
done

printf "\n%s\n" "${green}Done${end}"
